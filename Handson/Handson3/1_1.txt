Sita is a student of high school. She wants to know how many students (if any) have scored higher than her in the exams given during this semester.

Create a class named  with the following specifications:

A Data member named "scores" to hold a student's 5 exam scores.
A void input() function that reads 5 integers and saves them to "scores".
An int calculateTotalScore() function that returns the sum of the student's scores.

Input Format
============
In the void Student::input() function, you must read 5 exam scores from stdin and save them to your "scores" instance variable.

Output Format
=============
In the int Student::calculateTotalScore() function, you must return the student's total grade (the sum of the values in "scores").
The code snippet provided ( main() function ) will determine how many scores are larger than Sita's and print that number to the console.

Sample Input
============
The first line contains , the number of students in sita's class. The  subsequent lines contain each student's  exam grades for this semester.
3
30 40 45 10 10
40 40 40 10 10
50 20 30 10 10

Sample Output
=============
1
Explanation
Sita's grades are on the first line of grades. Only student scored higher than her.

============================
===== main() function: =====
============================
int main() {
    int n; // number of students
    cin >> n;
    Student *s = new Student[n]; // an array of n students
    
    for(int i = 0; i < n; i++){
        s[i].input();
    }

    // calculate sita's score
    int sita_score = s[0].calculateTotalScore();

    // determine how many students scored higher than sita
    int count = 0; 
    for(int i = 1; i < n; i++){
        int total = s[i].calculateTotalScore();
        if(total > sita_score){
            count++;
        }
    }

    // print result
    cout << count;
    
    return 0;
}

=================================================================
=================================================================
=================================================================
Input:
-------
3
30 40 45 10 10
40 40 40 10 10
50 20 30 10 10
Output:
------
1

==================================================================
Input:
------
22
25 26 45 22 31 
47 29 47 2 25 
25 32 34 17 6 
32 2 28 37 7 
39 18 11 29 6 
40 18 18 16 40 
13 43 49 41 10 
5 18 31 30 7 
18 34 28 26 5 
21 30 22 45 11 
17 17 24 41 4 
35 34 15 30 21 
45 1 2 25 31 
2 3 46 22 39 
49 7 16 32 2 
18 33 25 42 34 
10 44 28 4 12 
9 30 43 21 1 
42 20 47 7 25 
17 17 38 50 36 
4 33 20 6 31 
8 9 3 2 4
Output:
-------
4 

====================================================================
Input:
------
62
25 35 29 14 27 
49 32 45 50 20 
8 39 42 30 17 
39 8 31 50 16 
23 29 25 31 20 
5 18 28 7 35 
48 2 30 11 19 
48 34 4 13 14 
15 36 34 32 42 
26 8 3 12 7 
50 31 11 35 38 
5 30 14 40 2 
47 43 40 43 19 
20 16 43 7 25 
49 12 13 49 21 
26 5 17 40 43 
27 20 42 34 39 
46 25 1 8 49 
27 40 28 38 5 
17 3 33 18 7 
7 6 28 27 18 
49 32 41 26 14 
19 1 48 48 13 
15 13 45 23 21 
6 7 4 10 10 
44 11 34 10 9 
12 44 49 7 46 
37 37 29 6 35 
41 42 42 34 44 
1 39 48 29 12 
14 47 23 20 47 
30 17 38 26 33 
15 40 41 5 3 
16 6 13 11 24 
31 24 9 26 4 
1 49 26 25 43 
39 37 24 23 46 
19 4 7 14 43 
36 47 50 6 9 
29 29 11 14 23 
44 50 44 47 20 
2 13 24 29 34 
30 22 15 46 35 
41 3 5 10 3 
6 43 44 4 47 
25 31 24 20 37 
45 45 4 23 6 
15 24 2 31 29 
3 31 42 27 13 
31 38 13 8 8 
16 1 45 24 7 
1 18 28 9 4 
7 8 42 49 50 
6 49 22 48 15 
31 17 32 37 19 
11 26 44 38 26 
44 2 38 44 5 
21 39 46 31 16 
45 4 34 22 50 
33 42 26 41 36 
1 11 32 11 18 
3 26 8 22 16
Output:
-------
31
====================================================================